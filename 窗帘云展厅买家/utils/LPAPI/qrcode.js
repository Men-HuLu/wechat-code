var r = [ "length", "slice", "charCodeAt", "No canvas provided to draw QR code in!", "warn", "width", "height", "min", "ctx", "clearRect", "#000000", "setFillStyle", "x", "y", "fillRect", "exports" ];

!function() {
    function o(r, o) {
        var f;
        r > o && (f = r, r = o, o = f), f = o, f *= o, f += o, f >>= 1, y[f += r] = 1;
    }
    function f(r, f) {
        var e;
        for (R[r + l * f] = 1, e = -2; e < 2; e++) R[r + e + l * (f - 2)] = 1, R[r - 2 + l * (f + e + 1)] = 1, 
        R[r + 2 + l * (f + e)] = 1, R[r + e + 1 + l * (f + 2)] = 1;
        for (e = 0; e < 2; e++) o(r - 1, f + e), o(r + 1, f - e), o(r - e, f - 1), o(r + e, f + 1);
    }
    function e(r) {
        for (;r >= 255; ) r = ((r -= 255) >> 8) + (255 & r);
        return r;
    }
    function t(r, o, f, t) {
        var a, c, n;
        for (a = 0; a < t; a++) p[f + a] = 0;
        for (a = 0; a < o; a++) {
            if (255 != (n = Y[p[r + a] ^ p[f]])) for (c = 1; c < t; c++) p[f + c - 1] = p[f + c] ^ m[e(n + A[t - c])]; else for (c = f; c < f + t; c++) p[c] = p[c + 1];
            p[f + t - 1] = 255 == n ? 0 : m[e(n + A[0])];
        }
    }
    function a(r, o) {
        var f;
        return r > o && (f = r, r = o, o = f), f = o, f += o * o, f >>= 1, f += r, y[f];
    }
    function c(r) {
        var o, f, e, t;
        switch (r) {
          case 0:
            for (f = 0; f < l; f++) for (o = 0; o < l; o++) o + f & 1 || a(o, f) || (R[o + f * l] ^= 1);
            break;

          case 1:
            for (f = 0; f < l; f++) for (o = 0; o < l; o++) 1 & f || a(o, f) || (R[o + f * l] ^= 1);
            break;

          case 2:
            for (f = 0; f < l; f++) for (e = 0, o = 0; o < l; o++, e++) 3 == e && (e = 0), e || a(o, f) || (R[o + f * l] ^= 1);
            break;

          case 3:
            for (t = 0, f = 0; f < l; f++, t++) for (3 == t && (t = 0), e = t, o = 0; o < l; o++, 
            e++) 3 == e && (e = 0), e || a(o, f) || (R[o + f * l] ^= 1);
            break;

          case 4:
            for (f = 0; f < l; f++) for (e = 0, t = f >> 1 & 1, o = 0; o < l; o++, e++) 3 == e && (e = 0, 
            t = !t), t || a(o, f) || (R[o + f * l] ^= 1);
            break;

          case 5:
            for (t = 0, f = 0; f < l; f++, t++) for (3 == t && (t = 0), e = 0, o = 0; o < l; o++, 
            e++) 3 == e && (e = 0), (o & f & 1) + !(!e | !t) || a(o, f) || (R[o + f * l] ^= 1);
            break;

          case 6:
            for (t = 0, f = 0; f < l; f++, t++) for (3 == t && (t = 0), e = 0, o = 0; o < l; o++, 
            e++) 3 == e && (e = 0), (o & f & 1) + (e && e == t) & 1 || a(o, f) || (R[o + f * l] ^= 1);
            break;

          case 7:
            for (t = 0, f = 0; f < l; f++, t++) for (3 == t && (t = 0), e = 0, o = 0; o < l; o++, 
            e++) 3 == e && (e = 0), (e && e == t) + (o + f & 1) & 1 || a(o, f) || (R[o + f * l] ^= 1);
        }
    }
    function n(r) {
        var o, f = 0;
        for (o = 0; o <= r; o++) z[o] >= 5 && (f += C + z[o] - 5);
        for (o = 3; o < r - 1; o += 2) z[o - 2] == z[o + 2] && z[o + 2] == z[o - 1] && z[o - 1] == z[o + 1] && 3 * z[o - 1] == z[o] && (0 == z[o - 3] || o + 3 > r || 3 * z[o - 3] >= 4 * z[o] || 3 * z[o + 3] >= 4 * z[o]) && (f += N);
        return f;
    }
    function i() {
        var r, o, f, e, t, a = 0, c = 0;
        for (o = 0; o < l - 1; o++) for (r = 0; r < l - 1; r++) (R[r + l * o] && R[r + 1 + l * o] && R[r + l * (o + 1)] && R[r + 1 + l * (o + 1)] || !(R[r + l * o] || R[r + 1 + l * o] || R[r + l * (o + 1)] || R[r + 1 + l * (o + 1)])) && (a += M);
        for (o = 0; o < l; o++) {
            for (z[0] = 0, f = e = r = 0; r < l; r++) (t = R[r + l * o]) == e ? z[f]++ : z[++f] = 1, 
            c += (e = t) ? 1 : -1;
            a += n(f);
        }
        c < 0 && (c = -c);
        var i = c, s = 0;
        for (i += i << 2, i <<= 1; i > l * l; ) i -= l * l, s++;
        for (a += s * Q, r = 0; r < l; r++) {
            for (z[0] = 0, f = e = o = 0; o < l; o++) (t = R[r + l * o]) == e ? z[f]++ : z[++f] = 1, 
            e = t;
            a += n(f);
        }
        return a;
    }
    function s(n) {
        var s, z, C, M, N, Q, S, j;
        M = n[r[0]], u = 0;
        do {
            if (u++, C = 4 * (F - 1) + 16 * (u - 1), v = X[C++], d = X[C++], b = X[C++], h = X[C], 
            C = b * (v + d) + d - 3 + (u <= 9), M <= C) break;
        } while (u < 40);
        for (l = 17 + 4 * u, N = b + (b + h) * (v + d) + d, M = 0; M < N; M++) x[M] = 0;
        for (p = n[r[1]](0), M = 0; M < l * l; M++) R[M] = 0;
        for (M = 0; M < (l * (l + 1) + 1) / 2; M++) y[M] = 0;
        for (M = 0; M < 3; M++) {
            for (C = 0, z = 0, 1 == M && (C = l - 7), 2 == M && (z = l - 7), R[z + 3 + l * (C + 3)] = 1, 
            s = 0; s < 6; s++) R[z + s + l * C] = 1, R[z + l * (C + s + 1)] = 1, R[z + 6 + l * (C + s)] = 1, 
            R[z + s + 1 + l * (C + 6)] = 1;
            for (s = 1; s < 5; s++) o(z + s, C + 1), o(z + 1, C + s + 1), o(z + 5, C + s), o(z + s + 1, C + 5);
            for (s = 2; s < 4; s++) R[z + s + l * (C + 2)] = 1, R[z + 2 + l * (C + s + 1)] = 1, 
            R[z + 4 + l * (C + s)] = 1, R[z + s + 1 + l * (C + 4)] = 1;
        }
        if (u > 1) for (M = k[u], z = l - 7; ;) {
            for (s = l - 7; s > M - 3 && (f(s, z), !(s < M)); ) s -= M;
            if (z <= M + 9) break;
            f(6, z -= M), f(z, 6);
        }
        for (R[8 + l * (l - 8)] = 1, z = 0; z < 7; z++) o(7, z), o(l - 8, z), o(7, z + l - 7);
        for (s = 0; s < 8; s++) o(s, 7), o(s + l - 8, 7), o(s, l - 8);
        for (s = 0; s < 9; s++) o(s, 8);
        for (s = 0; s < 8; s++) o(s + l - 8, 8), o(8, s);
        for (z = 0; z < 7; z++) o(8, z + l - 7);
        for (s = 0; s < l - 14; s++) 1 & s ? (o(8 + s, 6), o(6, 8 + s)) : (R[8 + s + 6 * l] = 1, 
        R[6 + l * (8 + s)] = 1);
        if (u > 6) for (M = g[u - 7], C = 17, s = 0; s < 6; s++) for (z = 0; z < 3; z++, 
        C--) 1 & (C > 11 ? u >> C - 12 : M >> C) ? (R[5 - s + l * (2 - z + l - 11)] = 1, 
        R[2 - z + l - 11 + l * (5 - s)] = 1) : (o(5 - s, 2 - z + l - 11), o(2 - z + l - 11, 5 - s));
        for (z = 0; z < l; z++) for (s = 0; s <= z; s++) R[s + l * z] && o(s, z);
        for (N = p[r[0]], Q = 0; Q < N; Q++) x[Q] = p[r[2]](Q);
        if (p = x[r[1]](0), s = b * (v + d) + d, N >= s - 2 && (N = s - 2, u > 9 && N--), 
        Q = N, u > 9) {
            for (p[Q + 2] = 0, p[Q + 3] = 0; Q--; ) M = p[Q], p[Q + 3] |= 255 & M << 4, p[Q + 2] = M >> 4;
            p[2] |= 255 & N << 4, p[1] = N >> 4, p[0] = 64 | N >> 12;
        } else {
            for (p[Q + 1] = 0, p[Q + 2] = 0; Q--; ) M = p[Q], p[Q + 2] |= 255 & M << 4, p[Q + 1] = M >> 4;
            p[1] |= 255 & N << 4, p[0] = 64 | N >> 4;
        }
        for (Q = N + 3 - (u < 10); Q < s; ) p[Q++] = 236, p[Q++] = 17;
        for (A[0] = 1, Q = 0; Q < h; Q++) {
            for (A[Q + 1] = 1, S = Q; S > 0; S--) A[S] = A[S] ? A[S - 1] ^ m[e(Y[A[S]] + Q)] : A[S - 1];
            A[0] = m[e(Y[A[0]] + Q)];
        }
        for (Q = 0; Q <= h; Q++) A[Q] = Y[A[Q]];
        for (C = s, z = 0, Q = 0; Q < v; Q++) t(z, b, C, h), z += b, C += h;
        for (Q = 0; Q < d; Q++) t(z, b + 1, C, h), z += b + 1, C += h;
        for (z = 0, Q = 0; Q < b; Q++) {
            for (S = 0; S < v; S++) x[z++] = p[Q + S * b];
            for (S = 0; S < d; S++) x[z++] = p[v * b + Q + S * (b + 1)];
        }
        for (S = 0; S < d; S++) x[z++] = p[v * b + Q + S * (b + 1)];
        for (Q = 0; Q < h; Q++) for (S = 0; S < v + d; S++) x[z++] = p[s + Q + S * h];
        for (p = x, s = z = l - 1, C = N = 1, j = (b + h) * (v + d) + d, Q = 0; Q < j; Q++) for (M = p[Q], 
        S = 0; S < 8; S++, M <<= 1) {
            128 & M && (R[s + l * z] = 1);
            do {
                N ? s-- : (s++, C ? 0 != z ? z-- : (C = !C, 6 == (s -= 2) && (s--, z = 9)) : z != l - 1 ? z++ : (C = !C, 
                6 == (s -= 2) && (s--, z -= 8))), N = !N;
            } while (a(s, z));
        }
        for (p = R[r[1]](0), M = 0, z = 3e4, C = 0; C < 8 && (c(C), (s = i()) < z && (z = s, 
        M = C), 7 != M); C++) R = p[r[1]](0);
        for (M != C && c(M), z = w[M + (F - 1 << 3)], C = 0; C < 8; C++, z >>= 1) 1 & z && (R[l - 1 - C + 8 * l] = 1, 
        C < 6 ? R[8 + l * C] = 1 : R[8 + l * (C + 1)] = 1);
        for (C = 0; C < 7; C++, z >>= 1) 1 & z && (R[8 + l * (l - 7 + C)] = 1, C ? R[6 - C + 8 * l] = 1 : R[7 + 8 * l] = 1);
        return R;
    }
    var u, l, v, d, b, h, k = [ 0, 11, 15, 19, 23, 27, 31, 16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24, 26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28 ], g = [ 3220, 1468, 2713, 1235, 3062, 1890, 2119, 1549, 2344, 2936, 1117, 2583, 1330, 2470, 1667, 2249, 2028, 3780, 481, 4011, 142, 3098, 831, 3445, 592, 2517, 1776, 2234, 1951, 2827, 1070, 2660, 1345, 3177 ], w = [ 30660, 29427, 32170, 30877, 26159, 25368, 27713, 26998, 21522, 20773, 24188, 23371, 17913, 16590, 20375, 19104, 13663, 12392, 16177, 14854, 9396, 8579, 11994, 11245, 5769, 5054, 7399, 6608, 1890, 597, 3340, 2107 ], X = [ 1, 0, 19, 7, 1, 0, 16, 10, 1, 0, 13, 13, 1, 0, 9, 17, 1, 0, 34, 10, 1, 0, 28, 16, 1, 0, 22, 22, 1, 0, 16, 28, 1, 0, 55, 15, 1, 0, 44, 26, 2, 0, 17, 18, 2, 0, 13, 22, 1, 0, 80, 20, 2, 0, 32, 18, 2, 0, 24, 26, 4, 0, 9, 16, 1, 0, 108, 26, 2, 0, 43, 24, 2, 2, 15, 18, 2, 2, 11, 22, 2, 0, 68, 18, 4, 0, 27, 16, 4, 0, 19, 24, 4, 0, 15, 28, 2, 0, 78, 20, 4, 0, 31, 18, 2, 4, 14, 18, 4, 1, 13, 26, 2, 0, 97, 24, 2, 2, 38, 22, 4, 2, 18, 22, 4, 2, 14, 26, 2, 0, 116, 30, 3, 2, 36, 22, 4, 4, 16, 20, 4, 4, 12, 24, 2, 2, 68, 18, 4, 1, 43, 26, 6, 2, 19, 24, 6, 2, 15, 28, 4, 0, 81, 20, 1, 4, 50, 30, 4, 4, 22, 28, 3, 8, 12, 24, 2, 2, 92, 24, 6, 2, 36, 22, 4, 6, 20, 26, 7, 4, 14, 28, 4, 0, 107, 26, 8, 1, 37, 22, 8, 4, 20, 24, 12, 4, 11, 22, 3, 1, 115, 30, 4, 5, 40, 24, 11, 5, 16, 20, 11, 5, 12, 24, 5, 1, 87, 22, 5, 5, 41, 24, 5, 7, 24, 30, 11, 7, 12, 24, 5, 1, 98, 24, 7, 3, 45, 28, 15, 2, 19, 24, 3, 13, 15, 30, 1, 5, 107, 28, 10, 1, 46, 28, 1, 15, 22, 28, 2, 17, 14, 28, 5, 1, 120, 30, 9, 4, 43, 26, 17, 1, 22, 28, 2, 19, 14, 28, 3, 4, 113, 28, 3, 11, 44, 26, 17, 4, 21, 26, 9, 16, 13, 26, 3, 5, 107, 28, 3, 13, 41, 26, 15, 5, 24, 30, 15, 10, 15, 28, 4, 4, 116, 28, 17, 0, 42, 26, 17, 6, 22, 28, 19, 6, 16, 30, 2, 7, 111, 28, 17, 0, 46, 28, 7, 16, 24, 30, 34, 0, 13, 24, 4, 5, 121, 30, 4, 14, 47, 28, 11, 14, 24, 30, 16, 14, 15, 30, 6, 4, 117, 30, 6, 14, 45, 28, 11, 16, 24, 30, 30, 2, 16, 30, 8, 4, 106, 26, 8, 13, 47, 28, 7, 22, 24, 30, 22, 13, 15, 30, 10, 2, 114, 28, 19, 4, 46, 28, 28, 6, 22, 28, 33, 4, 16, 30, 8, 4, 122, 30, 22, 3, 45, 28, 8, 26, 23, 30, 12, 28, 15, 30, 3, 10, 117, 30, 3, 23, 45, 28, 4, 31, 24, 30, 11, 31, 15, 30, 7, 7, 116, 30, 21, 7, 45, 28, 1, 37, 23, 30, 19, 26, 15, 30, 5, 10, 115, 30, 19, 10, 47, 28, 15, 25, 24, 30, 23, 25, 15, 30, 13, 3, 115, 30, 2, 29, 46, 28, 42, 1, 24, 30, 23, 28, 15, 30, 17, 0, 115, 30, 10, 23, 46, 28, 10, 35, 24, 30, 19, 35, 15, 30, 17, 1, 115, 30, 14, 21, 46, 28, 29, 19, 24, 30, 11, 46, 15, 30, 13, 6, 115, 30, 14, 23, 46, 28, 44, 7, 24, 30, 59, 1, 16, 30, 12, 7, 121, 30, 12, 26, 47, 28, 39, 14, 24, 30, 22, 41, 15, 30, 6, 14, 121, 30, 6, 34, 47, 28, 46, 10, 24, 30, 2, 64, 15, 30, 17, 4, 122, 30, 29, 14, 46, 28, 49, 10, 24, 30, 24, 46, 15, 30, 4, 18, 122, 30, 13, 32, 46, 28, 48, 14, 24, 30, 42, 32, 15, 30, 20, 4, 117, 30, 40, 7, 47, 28, 43, 22, 24, 30, 10, 67, 15, 30, 19, 6, 118, 30, 18, 31, 47, 28, 34, 34, 24, 30, 20, 61, 15, 30 ], Y = [ 255, 0, 1, 25, 2, 50, 26, 198, 3, 223, 51, 238, 27, 104, 199, 75, 4, 100, 224, 14, 52, 141, 239, 129, 28, 193, 105, 248, 200, 8, 76, 113, 5, 138, 101, 47, 225, 36, 15, 33, 53, 147, 142, 218, 240, 18, 130, 69, 29, 181, 194, 125, 106, 39, 249, 185, 201, 154, 9, 120, 77, 228, 114, 166, 6, 191, 139, 98, 102, 221, 48, 253, 226, 152, 37, 179, 16, 145, 34, 136, 54, 208, 148, 206, 143, 150, 219, 189, 241, 210, 19, 92, 131, 56, 70, 64, 30, 66, 182, 163, 195, 72, 126, 110, 107, 58, 40, 84, 250, 133, 186, 61, 202, 94, 155, 159, 10, 21, 121, 43, 78, 212, 229, 172, 115, 243, 167, 87, 7, 112, 192, 247, 140, 128, 99, 13, 103, 74, 222, 237, 49, 197, 254, 24, 227, 165, 153, 119, 38, 184, 180, 124, 17, 68, 146, 217, 35, 32, 137, 46, 55, 63, 209, 91, 149, 188, 207, 205, 144, 135, 151, 178, 220, 252, 190, 97, 242, 86, 211, 171, 20, 42, 93, 158, 132, 60, 57, 83, 71, 109, 65, 162, 31, 45, 67, 216, 183, 123, 164, 118, 196, 23, 73, 236, 127, 12, 111, 246, 108, 161, 59, 82, 41, 157, 85, 170, 251, 96, 134, 177, 187, 204, 62, 90, 203, 89, 95, 176, 156, 169, 160, 81, 11, 245, 22, 235, 122, 117, 44, 215, 79, 174, 213, 233, 230, 231, 173, 232, 116, 214, 244, 234, 168, 80, 88, 175 ], m = [ 1, 2, 4, 8, 16, 32, 64, 128, 29, 58, 116, 232, 205, 135, 19, 38, 76, 152, 45, 90, 180, 117, 234, 201, 143, 3, 6, 12, 24, 48, 96, 192, 157, 39, 78, 156, 37, 74, 148, 53, 106, 212, 181, 119, 238, 193, 159, 35, 70, 140, 5, 10, 20, 40, 80, 160, 93, 186, 105, 210, 185, 111, 222, 161, 95, 190, 97, 194, 153, 47, 94, 188, 101, 202, 137, 15, 30, 60, 120, 240, 253, 231, 211, 187, 107, 214, 177, 127, 254, 225, 223, 163, 91, 182, 113, 226, 217, 175, 67, 134, 17, 34, 68, 136, 13, 26, 52, 104, 208, 189, 103, 206, 129, 31, 62, 124, 248, 237, 199, 147, 59, 118, 236, 197, 151, 51, 102, 204, 133, 23, 46, 92, 184, 109, 218, 169, 79, 158, 33, 66, 132, 21, 42, 84, 168, 77, 154, 41, 82, 164, 85, 170, 73, 146, 57, 114, 228, 213, 183, 115, 230, 209, 191, 99, 198, 145, 63, 126, 252, 229, 215, 179, 123, 246, 241, 255, 227, 219, 171, 75, 150, 49, 98, 196, 149, 55, 110, 220, 165, 87, 174, 65, 130, 25, 50, 100, 200, 141, 7, 14, 28, 56, 112, 224, 221, 167, 83, 166, 81, 162, 89, 178, 121, 242, 249, 239, 195, 155, 43, 86, 172, 69, 138, 9, 18, 36, 72, 144, 61, 122, 244, 245, 247, 243, 251, 235, 203, 139, 11, 22, 44, 88, 176, 125, 250, 233, 207, 131, 27, 54, 108, 216, 173, 71, 142, 0 ], p = [], x = [], R = [], y = [], z = [], F = 2, A = [], C = 3, M = 3, N = 40, Q = 10, S = null, j = null, q = {
        get codeX() {
            return codeX;
        },
        set codeX(r) {
            codeX = r;
        },
        get codeY() {
            return codeY;
        },
        set codeY(r) {
            codeY = r;
        },
        get ecclevel() {
            return F;
        },
        set ecclevel(r) {
            F = r;
        },
        get size() {
            return j;
        },
        set size(r) {
            j = r;
        },
        get canvas() {
            return S;
        },
        set canvas(r) {
            S = r;
        },
        getFrame: function(r) {
            return s(r);
        },
        draw: function(o, f, e, t) {
            if (F = t || F, f = f || S) {
                e = e || j || Math[r[7]](f[r[5]], f[r[6]]);
                var a = s(o), c = f[r[8]], n = e / l;
                c[r[9]](0, 0, f[r[5]], f[r[6]]), c[r[11]](r[10]);
                for (var i = 0; i < l; i++) for (var u = 0; u < l; u++) a[u * l + i] && c[r[14]](f[r[12]] + n * i, f[r[13]] + n * u, n, n);
            } else console[r[4]](r[3]);
        }
    };
    module[r[15]] = {
        api: q
    };
}();