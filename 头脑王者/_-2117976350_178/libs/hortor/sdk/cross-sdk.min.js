function e(e, t) {
    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}

var t = function() {
    function e(e, t) {
        for (var n = 0; n < t.length; n++) {
            var o = t[n];
            o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), 
            Object.defineProperty(e, o.key, o);
        }
    }
    return function(t, n, o) {
        return n && e(t.prototype, n), o && e(t, o), t;
    };
}();

!function() {
    var n = {
        Version: "2.1.2",
        NetUrl: {
            Test: "https://platform-test.hortorgames.com",
            Prod: "https://platform.hortorgames.com",
            Dev: "https://platform-dev.hortorgames.com"
        },
        Box: {
            appId: "wx3301a6cbd35d9935",
            path: "/pages/index/index",
            envVersion: "release",
            extraData: {}
        },
        Requests: {
            FetchAds: "/cross/api/v1/fetch",
            ImagePath: "/cross/api/v1/show",
            Log: "/cross/api/v1/log"
        },
        Errors: {
            NetWorkErr: {
                errCode: 1e3,
                errMsg: "网络错误"
            },
            AdsDataErr: {
                errCode: 1001,
                errMsg: "没有广告数据"
            },
            CantUseNavFun: {
                errCode: 0,
                errMsg: "无法使用方法跳转小程序"
            }
        },
        LogType: {
            ClickAd: 1,
            ShowAd: 2
        }
    }, o = function() {
        function o() {
            e(this, o);
        }
        return t(o, null, [ {
            key: "assign",
            value: function(e, t) {
                if (Object.assign) return Object.assign(e, t);
                for (var n in t) e[n] = t[n];
                return e;
            }
        }, {
            key: "jsonToQuery",
            value: function(e, t) {
                if (!e) return "";
                var n = [];
                for (var o in e) {
                    var s = t ? encodeURIComponent(e[o]) : e[o];
                    n.push(o + "=" + s);
                }
                return n.join("&");
            }
        }, {
            key: "queryToJson",
            value: function(e) {
                var t = {};
                if (!e) return t;
                var n = decodeURIComponent(e).split("&");
                for (var o in n) {
                    var s = n[o].split("=");
                    t[s[0]] = s[1];
                }
                return t;
            }
        }, {
            key: "getSystemInfo",
            value: function() {
                return this.systemInfo ? this.systemInfo : (this.systemInfo = wx.getSystemInfoSync(), 
                this.systemInfo.crossSDKV = n.Version, this.systemInfo);
            }
        }, {
            key: "getSystemInfoStr",
            value: function() {
                if (this.systemInfoStr) return this.systemInfoStr;
                var e = this.sliceJson(this.getSystemInfo(), [ "SDKVersion", "brand", "model", "system", "version", "crossSDKV" ]);
                return this.systemInfoStr = JSON.stringify(e), this.systemInfoStr;
            }
        }, {
            key: "sliceJson",
            value: function(e, t) {
                if (!e || !t) return {};
                "string" == typeof t && (t = t.replace(/\s+/g, "").split(","));
                var n = {};
                return t.map(function(t) {
                    n[t] = e[t];
                }), n;
            }
        }, {
            key: "isFun",
            value: function(e) {
                return !(!e || "function" != typeof e);
            }
        }, {
            key: "promisify",
            value: function(e) {
                return function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return new Promise(function(n, o) {
                        t.success = function(e) {
                            n(e);
                        }, t.fail = function(e) {
                            o(e);
                        }, e(t);
                    });
                };
            }
        }, {
            key: "setStorage",
            value: function(e, t, n) {
                var o = "_CSDK_" + e + (n ? "_" + n : "");
                if (o && void 0 !== t) try {
                    wx.setStorageSync(o, t.toString());
                } catch (e) {
                    console.warn("[CSDK] setStorage err", e);
                }
            }
        }, {
            key: "getStorage",
            value: function(e, t) {
                var n = "_CSDK_" + e + (t ? "_" + t : ""), o = "";
                try {
                    o = wx.getStorageSync(n);
                } catch (e) {
                    console.warn("[CSDK] getStorage err", e);
                }
                return o;
            }
        }, {
            key: "clearStorage",
            value: function(e) {
                wx.removeStorageSync(n.StorageKeys[e]);
            }
        }, {
            key: "isSystem",
            value: function(e) {
                e = e.toLowerCase();
                var t = this.is || {};
                if (void 0 !== t[e]) return t[e];
                var n = this.getSystemInfo().system.toLowerCase();
                return t[e] = -1 < n.indexOf(e), this.is = t, t[e];
            }
        }, {
            key: "isIOS",
            value: function() {
                return this.isSystem("ios");
            }
        }, {
            key: "isAndroid",
            value: function() {
                return this.isSystem("android");
            }
        } ]), o;
    }(), s = function() {
        function s(t) {
            e(this, s), console.log("consts.NetUrl[_conf.env]", n.NetUrl[t.env]), this.HOST = n.NetUrl[t.env];
        }
        return t(s, [ {
            key: "request",
            value: function(e, t, s, i) {
                if (!e || !t) return !1;
                var r = s || {}, a = r.success, u = r.fail, d = r.complete, c = r.params;
                c.sysInfo = o.getSystemInfoStr();
                var h = {
                    "content-type": i ? "application/json" : "application/x-www-form-urlencoded"
                }, l = function(e) {
                    var t = {
                        errMsg: e.errMsg || e || "",
                        errCode: e.errCode || n.Errors.NetWorkErr.errCode
                    };
                    o.isFun(u) && u(t);
                };
                return wx.request({
                    url: t,
                    data: c,
                    method: e,
                    header: h,
                    success: function(e) {
                        var t = e.data;
                        return 200 == e.statusCode ? t.meta && 0 != t.meta.errCode ? l(t.meta) : void (o.isFun(a) && a(t.data)) : l(t);
                    },
                    complete: function(e) {
                        o.isFun(d) && d(e);
                    },
                    fail: l
                });
            }
        }, {
            key: "get",
            value: function(e, t) {
                return this.request("GET", e, t);
            }
        }, {
            key: "post",
            value: function(e, t) {
                return this.request("POST", e, t);
            }
        }, {
            key: "getJSON",
            value: function(e, t) {
                return this.request("GET", e, t, !0);
            }
        }, {
            key: "postJSON",
            value: function(e, t) {
                return this.request("POST", e, t, !0);
            }
        } ]), s;
    }(), i = function() {
        function i(t) {
            var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            e(this, i), this.options = r, this.conf = t, this.network = new s(t), this.defData = {}, 
            this.change = "", this.ads = "", this.nowAd = "", this.lastIndex = "", this.showing = !1, 
            this.useBoxWeight = 100, this.durationTimer = 0, this.adsId = "";
            var a = t.isMiniGame || "undefined" != typeof GameGlobal, u = !a && o.isFun(wx.canIUse), d = u && !wx.canIUse("navigateToMiniProgram"), c = t.useNav || d, h = u && wx.canIUse("navigateToMiniProgram") || a && o.isFun(wx.navigateToMiniProgram), l = !((this.options.referrerInfo || {}).appId !== n.Box.appId);
            console.log("[CSDK] isMiniGame:" + a + "; useNavTag:" + c + "; canDirectJump:" + h + "; fromBox:" + l), 
            this.isMiniGame = a, this.useNavTag = c, this.canDirectJump = h, this.fromBox = l, 
            this.jumped = !1;
        }
        return t(i, [ {
            key: "_postLog",
            value: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.LogType.ShowAd, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, s = o.assign({
                    prId: t.prId || "",
                    logType: e,
                    adsId: this.adsId
                }, this.conf);
                this.network.post(this.network.HOST + n.Requests.Log, {
                    params: s
                });
            }
        }, {
            key: "_goApp",
            value: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (this.useNavTag) {
                    var s = n.Errors.CantUseNavFun;
                    return t.complete(s), t.success(s), !1;
                }
                var i = e.appId, r = e.path, a = e.envVersion, u = e.extraData, d = o.assign(t, {
                    appId: i,
                    path: r,
                    envVersion: a,
                    extraData: u
                });
                if (console.log("[CSDK] goApp", d), this.useDoubleJump && this.fromBox && !this.jumped && o.isAndroid()) {
                    var c = new Date().getTime(), h = this;
                    o.isFun(wx.onShow) && wx.onShow(function() {
                        if (h.jumped) return !1;
                        h.jumped = !0, new Date().getTime() - c < h.useDoubleJump && wx.navigateToMiniProgram(d);
                    });
                }
                wx.navigateToMiniProgram(d);
            }
        }, {
            key: "_previewImage",
            value: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                console.log("[CSDK] preview ad ", e);
                var n = o.assign(t, {
                    urls: [ e.url ]
                });
                wx.previewImage(n);
            }
        }, {
            key: "_goGame",
            value: function() {
                for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                this.canDirectJump && !t[0].use_code_jump ? this._goApp.apply(this, t) : this._previewImage.apply(this, t);
            }
        }, {
            key: "_getPathChannel",
            value: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "box", n = e.path ? e.path.split("?") : [], s = o.queryToJson(n[1]), i = o.isIOS() ? "I" : "A";
                s.channel = this.conf.gameId + "_" + i + "_" + t;
                var r = o.jsonToQuery(s);
                return (n[0] || "") + "?" + r;
            }
        }, {
            key: "_getDirectPathChannel",
            value: function(e) {
                return this._getPathChannel(e, "cross");
            }
        }, {
            key: "_setAds",
            value: function(e) {
                var t = 0, n = e.map(function(e) {
                    t += e.weight - 0;
                    var n = e.show_duration - 0;
                    e.show_duration = n && !isNaN(n) ? n : 0;
                    var o = {}, s = e.jumpConfig || {}, i = [ "jumpConfig" ];
                    for (var r in e) -1 == i.indexOf(r) && (o[r] = s[r] || e[r]);
                    return o;
                });
                this.ads = {
                    ads: n,
                    weight: t
                };
            }
        }, {
            key: "_getAds",
            value: function() {
                return this.ads || {};
            }
        }, {
            key: "_setData",
            value: function(e) {
                this.useBoxWeight = e.use_box_weight, this.useDoubleJump = e.use_double_jump, this._setAds(e.ads), 
                delete e.Title, delete e.ads, this.defData = o.assign(e, n.Box), this.defData.path = n.Box.path + "?f=" + this.conf.gameId;
            }
        }, {
            key: "_getData",
            value: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.nowAd;
                return e.icon ? e : this.defData;
            }
        }, {
            key: "_setLastIndex",
            value: function(e) {
                this.lastIndex = e, o.setStorage("LastIndex", e, this.adsId);
            }
        }, {
            key: "_getStorageIndex",
            value: function() {
                var e = parseInt(o.getStorage("LastIndex", this.adsId), 10);
                return isNaN(e) ? "" : (this.lastIndex = e, e);
            }
        }, {
            key: "_getLastIndex",
            value: function() {
                return "" === this.lastIndex ? this._getStorageIndex() : this.lastIndex;
            }
        }, {
            key: "_getRadomIndex",
            value: function(e) {
                var t = e.ads, n = e.weight, o = Math.floor(Math.random() * n), s = 0;
                return t.findIndex(function(e) {
                    var t = e.weight, n = !!(s <= o && o < s + t);
                    return n || (s += t), n;
                });
            }
        }, {
            key: "_getRadomAdIndex",
            value: function(e) {
                var t = this._getLastIndex(), n = this._getRadomIndex(e);
                return n == t ? this._getRadomAdIndex(e) : n;
            }
        }, {
            key: "_getRadomAd",
            value: function(e) {
                var t = e.ads, n = t.length, o = this._getLastIndex(), s = "";
                return "" === (s = 1 === n ? 0 : 2 === n ? 1 === o ? 0 : 1 : this._getRadomAdIndex(e)) ? "" : (this._setLastIndex(s), 
                t[s]);
            }
        }, {
            key: "reset",
            value: function(e) {
                var t = this;
                this.durationTimer && (clearTimeout(this.durationTimer), this.durationTimer = 0);
                var s = this._getAds(), i = s.ads ? s.ads.length : 0;
                if (1 === i && this.nowAd) return console.log("[CSDK] only one AD so not updated");
                var r = i ? this._getRadomAd(s) : "";
                if (!r) return !1;
                this.nowAd = r, this._postLog(n.LogType.ShowAd, r);
                var a = this._getData(r);
                if (console.log("[CSDK] now ad", a), o.isFun(e) && e(a), o.isFun(this.change) && this.change(a), 
                this.change && r.show_duration) {
                    var u = 1e3 * r.show_duration;
                    this._loop(function e() {
                        t.stopped ? t._loop(e, u) : t.reset();
                    }, u);
                }
            }
        }, {
            key: "_loop",
            value: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.durationTimer;
                n && clearTimeout(n), n = setTimeout(e, t);
            }
        }, {
            key: "stop",
            value: function() {
                console.log("[CSDK] stop loop"), this.stopped = !0;
            }
        }, {
            key: "start",
            value: function() {
                console.log("[CSDK] start loop"), this.stopped = !1;
            }
        }, {
            key: "onChange",
            value: function(e) {
                o.isFun(e) && (this.change = e);
            }
        }, {
            key: "show",
            value: function() {
                var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                if (this.showing) return !1;
                if (!this.nowAd) return console.log("[CSDK] no ad");
                this.showing = !0;
                var s = this.nowAd;
                this._postLog(n.LogType.ClickAd, s);
                var i = t.success, r = t.fail, a = t.complete;
                this._goGame(s, {
                    success: function(e) {
                        console.log("[CSDK] show success", e), o.isFun(i) && i(e);
                    },
                    fail: function(e) {
                        console.log("[CSDK] show fail", e), o.isFun(r) && r(e);
                    },
                    complete: function(t) {
                        e.showing = !1, o.isFun(e.change) && e.reset(), o.isFun(a) && a(t);
                    }
                });
            }
        }, {
            key: "getGoGameParams",
            value: function() {
                return this.nowAd || {};
            }
        }, {
            key: "manualClick",
            value: function() {
                if (!this.nowAd) return console.log("[CSDK] no ad");
                var e = this.nowAd;
                this._postLog(n.LogType.ClickAd, e);
            }
        }, {
            key: "create",
            value: function(e) {
                var t = this;
                console.log("[CSDK] create", e.adsId);
                var s = e.adsId, i = this.conf, r = i.gameId, a = i.openId, u = void 0 === a ? "" : a, d = i.userId, c = void 0 === d ? "" : d, h = i.sex, l = void 0 === h ? 0 : h, f = i.channel, g = void 0 === f ? "" : f, v = i.origChannel, p = void 0 === v ? "" : v, m = function(t) {
                    o.isFun(e.fail) && e.fail(t), console.log("[CSDK] create fail", t);
                };
                this.adsId = s, this.network.post(this.network.HOST + n.Requests.FetchAds, {
                    params: {
                        gameId: r,
                        openId: u,
                        userId: c,
                        adsId: s,
                        sex: l,
                        channel: g,
                        origChannel: p
                    },
                    success: function(o) {
                        return o.ads && o.ads.length ? (console.log("[CSDK] create success"), t._setData(o), 
                        void t.reset(e.success)) : m(n.Errors.AdsDataErr);
                    },
                    fail: m
                });
            }
        } ]), i;
    }(), r = {
        inited: !1,
        conf: {},
        ads: {},
        setOptions: function(e) {
            this.options = e;
        },
        getOptions: function() {
            var e = this.options;
            return e || (e = wx.getLaunchOptionsSync()), this.options = e || {}, this.options;
        },
        customerService: function(e) {
            wx.openCustomerServiceConversation(e);
        },
        createAd: function(e) {
            if (!this.inited) return console.error("[CSDK] 实例化后再创建广告位");
            if (!e || !e.adsId) return console.error("[CSDK] 未配置广告位Id adsId");
            var t = new i(this.conf, this.getOptions());
            return t.create(e), this.ads[e.adsId] = t, t;
        },
        showAd: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            "string" == typeof e && (e = {
                adsId: e
            });
            var t = e.adsId;
            if (!t) return console.warn("[CSDK] 展示广告需传入adsId");
            var n = this.ads[t];
            return n ? void n.show(e) : console.warn("[CSDK] 广告位 " + t + " 还未创建");
        },
        init: function(e) {
            if (!this.inited) {
                var t = Object.assign({}, e);
                return console.log("[CSDK] init", t), t.env && -1 !== [ "Dev", "Test", "Prod" ].indexOf(t.env) ? t.gameId ? t.gameVersion ? (t.openId = t.openId || t.userId || "", 
                t.userId = t.uniqueId || t.userId || "", t.openId || t.userId ? (t.sex = t.sex || 0, 
                this.conf = t, void (this.inited = !0)) : console.error("[CSDK] 请配置 openId 或 userId")) : console.error("[CSDK] 请配置游戏版本号 gameVersion") : console.error("[CSDK] 请配置游戏ID gameId") : console.error("[CSDK] 请配置正确的环境变量 env");
            }
        }
    };
    "undefined" == typeof App ? "undefined" == typeof module ? "undefined" != typeof window && (window.crossSDK = r) : (module.exports = r, 
    "undefined" != typeof window && (window.crossSDK = r)) : function(e) {
        function t(e) {
            this.crossSDK = new o(this), this.crossSDK.setOptions(e);
        }
        var n = function(e, t, n) {
            if (e[t]) {
                var o = e[t];
                e[t] = function(e) {
                    n.call(this, e, t), o.call(this, e);
                };
            } else e[t] = function(e) {
                n.call(this, e, t);
            };
        }, o = function(e) {
            this.app = e;
        };
        o.prototype = e;
        var s = App;
        App = function(e) {
            n(e, "onLaunch", t), s(e);
        };
    }(r);
}();